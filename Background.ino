void wallpaper(){
  
static const uint8_t image_data[1024] = {
    0x5b, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0x5b, 0xff, 0xff, 0xff, 0xff, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 
    0x5b, 0xff, 0xff, 0xff, 0xfe, 0x0f, 0xff, 0xff, 0xfb, 0xf9, 0xff, 0xe1, 0xff, 0xff, 0xff, 0xff, 
    0x5b, 0xff, 0xff, 0xff, 0xf8, 0x0f, 0xff, 0x83, 0xe3, 0xf1, 0xfb, 0x81, 0xff, 0xff, 0xff, 0xff, 
    0x5b, 0xff, 0xff, 0xff, 0xf0, 0x0f, 0x8f, 0x03, 0x81, 0xc1, 0xf0, 0x00, 0xff, 0xff, 0xff, 0xff, 
    0x5b, 0xff, 0xff, 0xff, 0xf0, 0x04, 0x0f, 0x03, 0x01, 0x81, 0xe0, 0x00, 0x7f, 0xff, 0xff, 0xff, 
    0x7b, 0xff, 0xff, 0xff, 0xe0, 0x04, 0x0f, 0x03, 0x01, 0x81, 0xe0, 0x00, 0x7f, 0xff, 0xff, 0xff, 
    0x00, 0x1f, 0xff, 0xff, 0xc0, 0x04, 0x07, 0x02, 0x01, 0xc0, 0xc0, 0x00, 0xff, 0xff, 0xff, 0xff, 
    0xfb, 0xff, 0xff, 0xff, 0x80, 0x0c, 0x03, 0x06, 0x01, 0xc1, 0x80, 0x1f, 0xff, 0xff, 0xff, 0xff, 
    0xdb, 0xff, 0xff, 0xff, 0x00, 0x78, 0x03, 0x04, 0x00, 0xc1, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 
    0xdb, 0xff, 0xff, 0xff, 0x00, 0xf8, 0x03, 0x04, 0x10, 0x80, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 
    0xdb, 0xff, 0xff, 0xff, 0x03, 0xf8, 0x01, 0x04, 0x10, 0x00, 0x04, 0x37, 0xff, 0xff, 0xff, 0xff, 
    0xdb, 0xff, 0xff, 0xff, 0x07, 0xfc, 0x01, 0x04, 0x10, 0x00, 0x0c, 0x03, 0xff, 0xff, 0xff, 0xff, 
    0xdb, 0xff, 0xff, 0xfe, 0x0f, 0x02, 0x00, 0x00, 0x38, 0x00, 0x1e, 0x03, 0xff, 0xff, 0xff, 0xff, 
    0xdb, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x20, 0x00, 0x30, 0x00, 0x1e, 0x0f, 0xff, 0xff, 0xff, 0xff, 
    0xfb, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x20, 0x00, 0x00, 0x20, 0x0e, 0x1f, 0xff, 0xff, 0xff, 0xff, 
    0x03, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x30, 0x00, 0x00, 0x30, 0x07, 0x00, 0xff, 0xff, 0xff, 0xff, 
    0xfb, 0xff, 0xff, 0xff, 0x05, 0x00, 0x38, 0x00, 0x00, 0x30, 0x03, 0x00, 0xff, 0xff, 0xff, 0xff, 
    0xdb, 0xff, 0xff, 0xff, 0x7f, 0x00, 0x38, 0x00, 0x18, 0x30, 0x81, 0x00, 0xff, 0xff, 0xff, 0xff, 
    0xdf, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x3c, 0x10, 0x78, 0x30, 0x83, 0x01, 0xff, 0xff, 0xff, 0xff, 
    0xdf, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x3c, 0x40, 0xfd, 0xf0, 0xc7, 0x07, 0xff, 0xff, 0xff, 0xff, 
    0xdf, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x3f, 0xc3, 0xff, 0xf8, 0xef, 0x8f, 0xff, 0xff, 0xff, 0xff, 
    0xdf, 0xff, 0xff, 0xff, 0x00, 0x08, 0xff, 0xe7, 0xff, 0xfe, 0xff, 0xbf, 0xff, 0xff, 0xff, 0xff, 
    0xdf, 0xff, 0xff, 0xff, 0x00, 0x1b, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0x03, 0xff, 0xff, 0xff, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0x83, 0xff, 0xff, 0xfe, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0x5f, 0xff, 0xff, 0xff, 0x8f, 0xff, 0xff, 0xfc, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf9, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x42, 0x30, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf9, 0x9c, 0xff, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xdf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x68, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf9, 0x16, 0xb1, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0x3b, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0x07, 0x61, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0x13, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0xc8, 0xc9, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xdf, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x03, 0xff, 0xf9, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x1f, 0xf0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xdf, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xdf, 0xff, 0xff, 0xfc, 0x00, 0x03, 0x1f, 0xf0, 0x3e, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xdf, 0xff, 0xff, 0xfc, 0x00, 0x17, 0x80, 0x05, 0x3c, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xdf, 0xff, 0xff, 0xfc, 0x00, 0x1f, 0xd0, 0x0c, 0x78, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xdf, 0xff, 0xff, 0xf8, 0x00, 0x1f, 0xc8, 0x60, 0xf1, 0x81, 0xfc, 0x3c, 0x7f, 0xff, 0xff, 0xff, 
    0x03, 0xff, 0xff, 0xf8, 0x40, 0x1f, 0xe2, 0x79, 0xf3, 0x0f, 0xff, 0x18, 0x7f, 0xff, 0xff, 0xff, 
    0x7b, 0xff, 0xff, 0xe0, 0x70, 0x9f, 0xf0, 0x73, 0xe6, 0x1e, 0x01, 0xc3, 0xbf, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0x80, 0x20, 0x0f, 0xf8, 0x67, 0xcc, 0xf8, 0x00, 0xc1, 0xdf, 0xff, 0xff, 0xff, 
    0xdf, 0xff, 0xff, 0x80, 0x00, 0x00, 0x11, 0x4f, 0x99, 0xe2, 0x00, 0xe4, 0xef, 0xff, 0xff, 0xff, 
    0xdf, 0xff, 0xff, 0x10, 0x08, 0x00, 0x16, 0x9f, 0x31, 0xc0, 0x00, 0x60, 0x77, 0xff, 0xff, 0xff, 
    0xdf, 0xff, 0xff, 0x00, 0x10, 0x00, 0x1f, 0x3e, 0x33, 0x83, 0x00, 0x6c, 0x37, 0xff, 0xff, 0xff, 
    0xdf, 0xff, 0xff, 0x00, 0x00, 0x00, 0x1e, 0x3c, 0xe7, 0x0c, 0x00, 0x03, 0xb9, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x1c, 0x78, 0xe6, 0x08, 0x00, 0x00, 0x98, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0x00, 0x00, 0xc0, 0xd9, 0xf3, 0xee, 0x4b, 0x80, 0x0f, 0x18, 0xff, 0xff, 0xff, 
    0x03, 0xff, 0xff, 0x00, 0x02, 0xce, 0x91, 0xe2, 0x0e, 0x47, 0xc0, 0x1a, 0x1d, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0x80, 0x00, 0x82, 0x33, 0xc0, 0x0e, 0x2b, 0xff, 0xf5, 0x1c, 0xff, 0xff, 0xff, 
    0xdb, 0xff, 0xff, 0x80, 0x02, 0x02, 0x07, 0x88, 0x07, 0x04, 0x1f, 0xc2, 0x1c, 0xff, 0xff, 0xff, 
    0xdf, 0xff, 0xff, 0xf0, 0x00, 0x40, 0x27, 0x00, 0x23, 0x82, 0xc0, 0x15, 0x0e, 0xff, 0xff, 0xff, 
    0xdf, 0xff, 0xff, 0xa0, 0x01, 0x50, 0x07, 0x20, 0x01, 0xc1, 0xff, 0xf2, 0x0e, 0xff, 0xff, 0xff, 
    0xdb, 0xff, 0xff, 0x02, 0x17, 0x30, 0x0e, 0x20, 0x09, 0xe4, 0xff, 0xc5, 0x0e, 0xff, 0xff, 0xff, 
    0xdb, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x12, 0x7f, 0xf2, 0x0e, 0xff, 0xff, 0xff, 
    0xdb, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x18, 0x08, 0x80, 0x0e, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x0e, 0x40, 0x00, 0x38, 0x60, 0x30, 0x0c, 0xff, 0xff, 0xff, 
    0x03, 0xff, 0xfc, 0x00, 0x20, 0x00, 0x07, 0xf0, 0x00, 0x7c, 0x7f, 0xf0, 0x00, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xfc, 0x00, 0x10, 0x00, 0x03, 0xff, 0x01, 0xf8, 0x0f, 0x80, 0x00, 0x7f, 0xff, 0xff, 
    0xdf, 0xff, 0xfe, 0x00, 0x00, 0x10, 0x10, 0x7f, 0xff, 0xf0, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff
};

  //display.drawBitmap(0,0,image_data,128,64,1);
  //tft.drawBitmap(0,0,image_data,128,64,1);
  tft.drawBitmap(0,0,image_data,128,64,1);
  tft.drawBitmap(0,64,image_data,128,64,1);
  tft.drawBitmap(132,0,image_data,128,64,1);
  tft.drawBitmap(132,64,image_data,128,64,1);
 // tft.display();

}  


void scoreBoard(){
tft.drawRect(0,0,240,20,ST77XX_WHITE);
tft.setTextSize(2);             // Normal 1:1 pixel scale
  tft.setTextColor(ST77XX_WHITE);        // Draw white text
  tft.setCursor(20, 3);            // Start at top-left corner
  tft.print("Score:");
  tft.setCursor(130, 3); 
  tft.print( Score);
 // tft.display();
  
}
void winOrlost(){
 if(lost==false){

tft.fillScreen(ST77XX_BLACK);  
tft.setTextSize(2);  
  tft.setTextColor(ST77XX_WHITE);        // Draw white text
  tft.setCursor(20,20);            // Start at top-left corner
  tft.print("    YOU WIN");
 // tft.display();
  Play_CrazyFrog();
  //delay(100);
 }
 else{
tft.fillScreen(ST77XX_BLACK);
  tft.setTextSize(2);  
  tft.setTextColor(ST77XX_WHITE);        // Draw white text
  tft.setCursor(20,2);            // Start at top-left corner
  tft.print("    YOU LOST");
  
  tft.setTextSize(2);// Start at top-left corner
  tft.setCursor(30,30);
  tft.setCursor(100,30);            // Start at top-left corner
  tft.print(Score);
  //tft.display();
 // delay(100);
 play_GavmeOver();
 }

 
}
